Problem: https://leetcode.com/problems/remove-linked-list-elements/description/https://leetcode.com/problems/remove-linked-list-elements/description/

code:
/*
 * @lc app=leetcode id=203 lang=cpp
 *
 * [203] Remove Linked List Elements
 */

// @lc code=start
/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
void take_in(ListNode*& newhead, ListNode*& newtail, int val)
{
    ListNode* newnode= new ListNode(val);
    if(newhead== NULL)
    {
        newhead=newnode;
        newtail=newnode;
        return;
    }
    else 
    {
        newtail->next=newnode;
        newtail=newnode;
    }
}
    ListNode* removeElements(ListNode* head, int val) {
        ListNode*newhead= NULL;
        ListNode*newtail= NULL;
        ListNode *temp = head;
        while (temp != NULL)
        {
            if(temp->val != val)
            {
                take_in(newhead, newtail, temp->val);
            }
           temp=temp->next;
        }
        return newhead;
    }
};
// @lc code=end

