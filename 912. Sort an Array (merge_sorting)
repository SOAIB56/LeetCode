problem link: https://leetcode.com/problems/sort-an-array/description/

solution

class Solution {
public:
void conquere(int l, int r, int mid,vector<int>& nums)
{
    int l_size= mid-l+1;
   int left_arr[l_size+1];
    int r_size= r-mid;
    int right_arr[r_size+1];

    for(int i=l , j=0;i<= mid;i++, j++)
    {
        left_arr[j]= nums[i];
    }
    for(int i=mid+1 , j=0;i<= r;i++, j++)
    {
        right_arr[j]= nums[i];
    }
    left_arr[l_size]=INT_MAX;
    right_arr[r_size]=INT_MAX;
    int lp=0;
    int rp=0;
    for(int i=l; i<= r;i++)
    {
        if(left_arr[lp]<= right_arr[rp])
        {
            nums[i]= left_arr[lp];
            lp++;
        }
        else
        {
            nums[i]= right_arr[rp];
            rp++;
        }
    }
}
void divide(int l, int r, vector<int> & nums)
{
    if(l==r) return;
    int mid= (l+r)/2;
    divide(l, mid, nums);
    divide(mid+1, r, nums);
    conquere(l, r, mid, nums);
}
    vector<int> sortArray(vector<int>& nums) {
         divide(0, nums.size()-1, nums);
         return nums;
    }
};
