problem link: https://leetcode.com/problems/maximum-depth-of-binary-tree/submissions/1406829459/

solution:
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:

    int maxDepth(TreeNode* root) {
        queue<pair<TreeNode*, int>> q;
        set<int, greater<int>> st;
        if(root) q.push({root, 1});
        while(!q.empty())
        {
            pair<TreeNode*, int>pq= q.front();
            q.pop();
            TreeNode* parent=pq.first;
            int level= pq.second;
            st.insert(level);
            if(parent->left) q.push({parent->left, level+1});
            if(parent->right) q.push({parent->right, level+1});
        }
      
        return *st.begin();
    }
};
