problem link:
https://leetcode.com/problems/univalued-binary-tree/description/


solution

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool isUnivalTree(TreeNode* root) {
        queue<TreeNode*> q;
        int x=root->val;
        bool flag= true;
        if(root ) q.push(root);
        while (!q.empty())
        {
            TreeNode* p=q.front();
            q.pop();
            if(p->val!= x)
            {
                flag= false; 
                break;
            }
            if(p->left) q.push(p->left);
            if(p->right) q.push(p->right);
        }
        if(flag== true) return true;
        else return false;
        
    }
};
