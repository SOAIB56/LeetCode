problem link: https://leetcode.com/problems/minimum-absolute-difference-in-bst/description/

solution:
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
void  vectot_input( vector<int>&v,TreeNode* root)
{
    if(root== NULL) return;
    if(root != NULL) v.push_back(root->val);
    vectot_input( v, root->left);
    vectot_input( v, root->right);
}
    int getMinimumDifference(TreeNode* root) {
        vector<int> v;
        vectot_input( v, root);
        sort(v.begin(), v.end());
        int my_min= INT_MAX;
        for(int i=0; i<v.size()-1; i++)
        {
            int minn= v[i+1]-v[i];
           if(minn<my_min)
           {
            my_min= minn;
           }
            // cout<<v[i+1]<<" "<<v[i]<<endl;
        }
        return my_min;
    }
};
