problem link: https://leetcode.com/problems/increasing-order-search-tree/

solution:
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
void fun(vector<int> &v, TreeNode* root)
{
    if(root== NULL) return;
    fun(v, root->left);
    if(root)
    {
        v.push_back(root->val);
    }
    
    fun(v, root->right);
}
    TreeNode* increasingBST(TreeNode* root) 
    {
        vector<int> v;
        fun(v, root);
       
        root=new TreeNode(v[0]);
        TreeNode * current= root;
        for(int i= 1; i<v.size(); i++)
        {
            current->right= new TreeNode(v[i]);
             current->left= NULL;
             current= current->right;
        }
        return root;
    }
};
