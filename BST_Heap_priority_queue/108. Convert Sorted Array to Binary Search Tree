problem link: https://leetcode.com/problems/convert-sorted-array-to-binary-search-tree/description/

solution

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
 TreeNode* convertion(vector<int>v, int l, int r)
 {
    if(l> r) return     NULL;
    int mid= (l+r)/2;
    TreeNode* root= new TreeNode( v[mid]);
    TreeNode* le= convertion(v, l, mid-1);
    TreeNode* ri= convertion(v, mid+1, r);
    root->left= le;
    root->right= ri;
    return root;
 }
    TreeNode* sortedArrayToBST(vector<int>& nums) {
        int l=0;
        int r= nums.size()-1;
        TreeNode* root= convertion(nums, l, r);
        return root;
        
    }
};
